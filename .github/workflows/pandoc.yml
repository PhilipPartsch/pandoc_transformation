name: Pandoc Transformation

on:
  push:
  #pull_request:
  workflow_dispatch:

jobs:
  convert_via_pandoc:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3"
          cache: 'pip' # caching pip dependencies
      - name: print versions for debugging
        run: python --version ; pip --version ; whoami
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
          python -m pip install -r ./pdf_to_odt_docx/requirements.txt
          # python -m pip install . # install local script
      - name: transform pdf to docx / odt
        run: |
          python3 ./pdf_to_odt_docx/converter.py -in ./input -out ./intermediate
      - name: Archive intermediate folder
        uses: actions/upload-artifact@v4
        with:
          name: intermediate
          path: |
            ./intermediate/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: create file list
        id: files_list
        run: |
          echo "files=$(printf '"%s" ' *.docx)" > $GITHUB_OUTPUT
      - name: run pandoc
        uses: docker://pandoc/core:2.9
        with:
          args: >- # allows you to break string into multiple lines
            --standalone
            --output=./output/converted.txt.html
            ./intermediate/converted.txt
      - name: bulk pandoc transformation
        uses: docker://pandoc/core:2.9
        run: |
          cd ./intermediate
          find . -name \*.docx -type f -exec pandoc -o {}.rst {} \;
      - name: Archive output folder
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: |
            ./output/
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
